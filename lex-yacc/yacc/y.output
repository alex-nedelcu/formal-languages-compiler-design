Terminals which are not used

   STOP
   SUBTRACT
   PERCENT


Grammar

    0 $accept: program $end

    1 program: START statementList END

    2 statementList: statement
    3              | statement statementList

    4 statement: simpleStatement
    5          | structStatement

    6 simpleStatement: defineStatement
    7                | ioStatement
    8                | assignStatement

    9 defineStatement: DEFINE type IDENTIFIER SEMICOLON

   10 type: simpleType
   11     | arrayType

   12 simpleType: INTEGER_TYPE
   13           | STRING_TYPE
   14           | BOOL_TYPE

   15 arrayType: simpleType OPEN_SQUARE_BRACKET unsignedNumber CLOSED_SQUARE_BRACKET

   16 ioStatement: readStatement SEMICOLON
   17            | writeStatement SEMICOLON

   18 readStatement: READ OPEN_ROUND_BRACKET IDENTIFIER CLOSED_ROUND_BRACKET

   19 writeStatement: DISPLAY OPEN_ROUND_BRACKET displayable CLOSED_ROUND_BRACKET

   20 displayable: IDENTIFIER
   21            | INTEGER_CONST
   22            | STRING_CONST
   23            | BOOL_CONST

   24 assignStatement: IDENTIFIER ASSIGN expression SEMICOLON

   25 expression: term
   26           | expression PLUS term
   27           | expression MINUS term

   28 term: factor
   29     | term MULTIPLY factor
   30     | term DIVIDE factor

   31 factor: OPEN_ROUND_BRACKET expression CLOSED_ROUND_BRACKET
   32       | IDENTIFIER
   33       | INTEGER_CONST
   34       | IDENTIFIER OPEN_SQUARE_BRACKET unsignedNumber CLOSED_SQUARE_BRACKET

   35 structStatement: ifStatement
   36                | loopStatement

   37 ifStatement: ifBranch
   38            | ifBranch ELSE OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET
   39            | ifBranch ELSE ifStatement

   40 ifBranch: IF OPEN_ROUND_BRACKET condition CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

   41 condition: expression relation expression

   42 relation: LESS
   43         | LESS_OR_EQUAL
   44         | GREATER
   45         | GREATER_OR_EQUAL
   46         | EQUALS
   47         | DOES_NOT_EQUAL

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

   49 unsignedNumber: NON_ZERO_DIGIT
   50               | NON_ZERO_DIGIT digitSequence

   51 digitSequence: DIGIT
   52              | DIGIT digitSequence


Terminals, with rules where they appear

$end (0) 0
error (256)
START (258) 1
END (259) 1
DEFINE (260) 9
INTEGER_TYPE (261) 12
STRING_TYPE (262) 13
BOOL_TYPE (263) 14
READ (264) 18
DISPLAY (265) 19
IF (266) 40
ELSE (267) 38 39
STOP (268)
LOOP (269) 48
ITERATOR (270) 48
FROM (271) 48
STEP (272) 48
UNTIL (273) 48
OPEN_ROUND_BRACKET (274) 18 19 31 40 48
CLOSED_ROUND_BRACKET (275) 18 19 31 40 48
OPEN_SQUARE_BRACKET (276) 15 34
CLOSED_SQUARE_BRACKET (277) 15 34
OPEN_CURLY_BRACKET (278) 38 40 48
CLOSED_CURLY_BRACKET (279) 38 40 48
COMMA (280) 48
SEMICOLON (281) 9 16 17 24
PLUS (282) 26
MINUS (283) 27
SUBTRACT (284)
DIVIDE (285) 30
MULTIPLY (286) 29
ASSIGN (287) 24 48
EQUALS (288) 46
DOES_NOT_EQUAL (289) 47
GREATER (290) 44
GREATER_OR_EQUAL (291) 45
LESS (292) 42
LESS_OR_EQUAL (293) 43
PERCENT (294)
IDENTIFIER (295) 9 18 20 24 32 34 48
INTEGER_CONST (296) 21 33
BOOL_CONST (297) 23
STRING_CONST (298) 22
DIGIT (299) 51 52
NON_ZERO_DIGIT (300) 49 50


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
statementList (48)
    on left: 2 3, on right: 1 3 38 40 48
statement (49)
    on left: 4 5, on right: 2 3
simpleStatement (50)
    on left: 6 7 8, on right: 4
defineStatement (51)
    on left: 9, on right: 6
type (52)
    on left: 10 11, on right: 9
simpleType (53)
    on left: 12 13 14, on right: 10 15
arrayType (54)
    on left: 15, on right: 11
ioStatement (55)
    on left: 16 17, on right: 7
readStatement (56)
    on left: 18, on right: 16
writeStatement (57)
    on left: 19, on right: 17
displayable (58)
    on left: 20 21 22 23, on right: 19
assignStatement (59)
    on left: 24, on right: 8
expression (60)
    on left: 25 26 27, on right: 24 26 27 31 41 48
term (61)
    on left: 28 29 30, on right: 25 26 27 29 30
factor (62)
    on left: 31 32 33 34, on right: 28 29 30
structStatement (63)
    on left: 35 36, on right: 5
ifStatement (64)
    on left: 37 38 39, on right: 35 39
ifBranch (65)
    on left: 40, on right: 37 38 39
condition (66)
    on left: 41, on right: 40
relation (67)
    on left: 42 43 44 45 46 47, on right: 41
loopStatement (68)
    on left: 48, on right: 36
unsignedNumber (69)
    on left: 49 50, on right: 15 34
digitSequence (70)
    on left: 51 52, on right: 50 52


state 0

    0 $accept: . program $end

    START  shift, and go to state 1

    program  go to state 2


state 1

    1 program: START . statementList END

    DEFINE      shift, and go to state 3
    READ        shift, and go to state 4
    DISPLAY     shift, and go to state 5
    IF          shift, and go to state 6
    LOOP        shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    statementList    go to state 9
    statement        go to state 10
    simpleStatement  go to state 11
    defineStatement  go to state 12
    ioStatement      go to state 13
    readStatement    go to state 14
    writeStatement   go to state 15
    assignStatement  go to state 16
    structStatement  go to state 17
    ifStatement      go to state 18
    ifBranch         go to state 19
    loopStatement    go to state 20


state 2

    0 $accept: program . $end

    $end  shift, and go to state 21


state 3

    9 defineStatement: DEFINE . type IDENTIFIER SEMICOLON

    INTEGER_TYPE  shift, and go to state 22
    STRING_TYPE   shift, and go to state 23
    BOOL_TYPE     shift, and go to state 24

    type        go to state 25
    simpleType  go to state 26
    arrayType   go to state 27


state 4

   18 readStatement: READ . OPEN_ROUND_BRACKET IDENTIFIER CLOSED_ROUND_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 28


state 5

   19 writeStatement: DISPLAY . OPEN_ROUND_BRACKET displayable CLOSED_ROUND_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 29


state 6

   40 ifBranch: IF . OPEN_ROUND_BRACKET condition CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 30


state 7

   48 loopStatement: LOOP . OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 31


state 8

   24 assignStatement: IDENTIFIER . ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 32


state 9

    1 program: START statementList . END

    END  shift, and go to state 33


state 10

    2 statementList: statement .
    3              | statement . statementList

    DEFINE      shift, and go to state 3
    READ        shift, and go to state 4
    DISPLAY     shift, and go to state 5
    IF          shift, and go to state 6
    LOOP        shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 2 (statementList)

    statementList    go to state 34
    statement        go to state 10
    simpleStatement  go to state 11
    defineStatement  go to state 12
    ioStatement      go to state 13
    readStatement    go to state 14
    writeStatement   go to state 15
    assignStatement  go to state 16
    structStatement  go to state 17
    ifStatement      go to state 18
    ifBranch         go to state 19
    loopStatement    go to state 20


state 11

    4 statement: simpleStatement .

    $default  reduce using rule 4 (statement)


state 12

    6 simpleStatement: defineStatement .

    $default  reduce using rule 6 (simpleStatement)


state 13

    7 simpleStatement: ioStatement .

    $default  reduce using rule 7 (simpleStatement)


state 14

   16 ioStatement: readStatement . SEMICOLON

    SEMICOLON  shift, and go to state 35


state 15

   17 ioStatement: writeStatement . SEMICOLON

    SEMICOLON  shift, and go to state 36


state 16

    8 simpleStatement: assignStatement .

    $default  reduce using rule 8 (simpleStatement)


state 17

    5 statement: structStatement .

    $default  reduce using rule 5 (statement)


state 18

   35 structStatement: ifStatement .

    $default  reduce using rule 35 (structStatement)


state 19

   37 ifStatement: ifBranch .
   38            | ifBranch . ELSE OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET
   39            | ifBranch . ELSE ifStatement

    ELSE  shift, and go to state 37

    $default  reduce using rule 37 (ifStatement)


state 20

   36 structStatement: loopStatement .

    $default  reduce using rule 36 (structStatement)


state 21

    0 $accept: program $end .

    $default  accept


state 22

   12 simpleType: INTEGER_TYPE .

    $default  reduce using rule 12 (simpleType)


state 23

   13 simpleType: STRING_TYPE .

    $default  reduce using rule 13 (simpleType)


state 24

   14 simpleType: BOOL_TYPE .

    $default  reduce using rule 14 (simpleType)


state 25

    9 defineStatement: DEFINE type . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 38


state 26

   10 type: simpleType .
   15 arrayType: simpleType . OPEN_SQUARE_BRACKET unsignedNumber CLOSED_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 39

    $default  reduce using rule 10 (type)


state 27

   11 type: arrayType .

    $default  reduce using rule 11 (type)


state 28

   18 readStatement: READ OPEN_ROUND_BRACKET . IDENTIFIER CLOSED_ROUND_BRACKET

    IDENTIFIER  shift, and go to state 40


state 29

   19 writeStatement: DISPLAY OPEN_ROUND_BRACKET . displayable CLOSED_ROUND_BRACKET

    IDENTIFIER     shift, and go to state 41
    INTEGER_CONST  shift, and go to state 42
    BOOL_CONST     shift, and go to state 43
    STRING_CONST   shift, and go to state 44

    displayable  go to state 45


state 30

   40 ifBranch: IF OPEN_ROUND_BRACKET . condition CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    expression  go to state 49
    term        go to state 50
    factor      go to state 51
    condition   go to state 52


state 31

   48 loopStatement: LOOP OPEN_ROUND_BRACKET . ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    ITERATOR  shift, and go to state 53


state 32

   24 assignStatement: IDENTIFIER ASSIGN . expression SEMICOLON

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    expression  go to state 54
    term        go to state 50
    factor      go to state 51


state 33

    1 program: START statementList END .

    $default  reduce using rule 1 (program)


state 34

    3 statementList: statement statementList .

    $default  reduce using rule 3 (statementList)


state 35

   16 ioStatement: readStatement SEMICOLON .

    $default  reduce using rule 16 (ioStatement)


state 36

   17 ioStatement: writeStatement SEMICOLON .

    $default  reduce using rule 17 (ioStatement)


state 37

   38 ifStatement: ifBranch ELSE . OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET
   39            | ifBranch ELSE . ifStatement

    IF                  shift, and go to state 6
    OPEN_CURLY_BRACKET  shift, and go to state 55

    ifStatement  go to state 56
    ifBranch     go to state 19


state 38

    9 defineStatement: DEFINE type IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 57


state 39

   15 arrayType: simpleType OPEN_SQUARE_BRACKET . unsignedNumber CLOSED_SQUARE_BRACKET

    NON_ZERO_DIGIT  shift, and go to state 58

    unsignedNumber  go to state 59


state 40

   18 readStatement: READ OPEN_ROUND_BRACKET IDENTIFIER . CLOSED_ROUND_BRACKET

    CLOSED_ROUND_BRACKET  shift, and go to state 60


state 41

   20 displayable: IDENTIFIER .

    $default  reduce using rule 20 (displayable)


state 42

   21 displayable: INTEGER_CONST .

    $default  reduce using rule 21 (displayable)


state 43

   23 displayable: BOOL_CONST .

    $default  reduce using rule 23 (displayable)


state 44

   22 displayable: STRING_CONST .

    $default  reduce using rule 22 (displayable)


state 45

   19 writeStatement: DISPLAY OPEN_ROUND_BRACKET displayable . CLOSED_ROUND_BRACKET

    CLOSED_ROUND_BRACKET  shift, and go to state 61


state 46

   31 factor: OPEN_ROUND_BRACKET . expression CLOSED_ROUND_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    expression  go to state 62
    term        go to state 50
    factor      go to state 51


state 47

   32 factor: IDENTIFIER .
   34       | IDENTIFIER . OPEN_SQUARE_BRACKET unsignedNumber CLOSED_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 63

    $default  reduce using rule 32 (factor)


state 48

   33 factor: INTEGER_CONST .

    $default  reduce using rule 33 (factor)


state 49

   26 expression: expression . PLUS term
   27           | expression . MINUS term
   41 condition: expression . relation expression

    PLUS              shift, and go to state 64
    MINUS             shift, and go to state 65
    EQUALS            shift, and go to state 66
    DOES_NOT_EQUAL    shift, and go to state 67
    GREATER           shift, and go to state 68
    GREATER_OR_EQUAL  shift, and go to state 69
    LESS              shift, and go to state 70
    LESS_OR_EQUAL     shift, and go to state 71

    relation  go to state 72


state 50

   25 expression: term .
   29 term: term . MULTIPLY factor
   30     | term . DIVIDE factor

    DIVIDE    shift, and go to state 73
    MULTIPLY  shift, and go to state 74

    $default  reduce using rule 25 (expression)


state 51

   28 term: factor .

    $default  reduce using rule 28 (term)


state 52

   40 ifBranch: IF OPEN_ROUND_BRACKET condition . CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    CLOSED_ROUND_BRACKET  shift, and go to state 75


state 53

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR . ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    ASSIGN  shift, and go to state 76


state 54

   24 assignStatement: IDENTIFIER ASSIGN expression . SEMICOLON
   26 expression: expression . PLUS term
   27           | expression . MINUS term

    SEMICOLON  shift, and go to state 77
    PLUS       shift, and go to state 64
    MINUS      shift, and go to state 65


state 55

   38 ifStatement: ifBranch ELSE OPEN_CURLY_BRACKET . statementList CLOSED_CURLY_BRACKET

    DEFINE      shift, and go to state 3
    READ        shift, and go to state 4
    DISPLAY     shift, and go to state 5
    IF          shift, and go to state 6
    LOOP        shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    statementList    go to state 78
    statement        go to state 10
    simpleStatement  go to state 11
    defineStatement  go to state 12
    ioStatement      go to state 13
    readStatement    go to state 14
    writeStatement   go to state 15
    assignStatement  go to state 16
    structStatement  go to state 17
    ifStatement      go to state 18
    ifBranch         go to state 19
    loopStatement    go to state 20


state 56

   39 ifStatement: ifBranch ELSE ifStatement .

    $default  reduce using rule 39 (ifStatement)


state 57

    9 defineStatement: DEFINE type IDENTIFIER SEMICOLON .

    $default  reduce using rule 9 (defineStatement)


state 58

   49 unsignedNumber: NON_ZERO_DIGIT .
   50               | NON_ZERO_DIGIT . digitSequence

    DIGIT  shift, and go to state 79

    $default  reduce using rule 49 (unsignedNumber)

    digitSequence  go to state 80


state 59

   15 arrayType: simpleType OPEN_SQUARE_BRACKET unsignedNumber . CLOSED_SQUARE_BRACKET

    CLOSED_SQUARE_BRACKET  shift, and go to state 81


state 60

   18 readStatement: READ OPEN_ROUND_BRACKET IDENTIFIER CLOSED_ROUND_BRACKET .

    $default  reduce using rule 18 (readStatement)


state 61

   19 writeStatement: DISPLAY OPEN_ROUND_BRACKET displayable CLOSED_ROUND_BRACKET .

    $default  reduce using rule 19 (writeStatement)


state 62

   26 expression: expression . PLUS term
   27           | expression . MINUS term
   31 factor: OPEN_ROUND_BRACKET expression . CLOSED_ROUND_BRACKET

    CLOSED_ROUND_BRACKET  shift, and go to state 82
    PLUS                  shift, and go to state 64
    MINUS                 shift, and go to state 65


state 63

   34 factor: IDENTIFIER OPEN_SQUARE_BRACKET . unsignedNumber CLOSED_SQUARE_BRACKET

    NON_ZERO_DIGIT  shift, and go to state 58

    unsignedNumber  go to state 83


state 64

   26 expression: expression PLUS . term

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    term    go to state 84
    factor  go to state 51


state 65

   27 expression: expression MINUS . term

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    term    go to state 85
    factor  go to state 51


state 66

   46 relation: EQUALS .

    $default  reduce using rule 46 (relation)


state 67

   47 relation: DOES_NOT_EQUAL .

    $default  reduce using rule 47 (relation)


state 68

   44 relation: GREATER .

    $default  reduce using rule 44 (relation)


state 69

   45 relation: GREATER_OR_EQUAL .

    $default  reduce using rule 45 (relation)


state 70

   42 relation: LESS .

    $default  reduce using rule 42 (relation)


state 71

   43 relation: LESS_OR_EQUAL .

    $default  reduce using rule 43 (relation)


state 72

   41 condition: expression relation . expression

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    expression  go to state 86
    term        go to state 50
    factor      go to state 51


state 73

   30 term: term DIVIDE . factor

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    factor  go to state 87


state 74

   29 term: term MULTIPLY . factor

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    factor  go to state 88


state 75

   40 ifBranch: IF OPEN_ROUND_BRACKET condition CLOSED_ROUND_BRACKET . OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 89


state 76

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN . IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 90


state 77

   24 assignStatement: IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 24 (assignStatement)


state 78

   38 ifStatement: ifBranch ELSE OPEN_CURLY_BRACKET statementList . CLOSED_CURLY_BRACKET

    CLOSED_CURLY_BRACKET  shift, and go to state 91


state 79

   51 digitSequence: DIGIT .
   52              | DIGIT . digitSequence

    DIGIT  shift, and go to state 79

    $default  reduce using rule 51 (digitSequence)

    digitSequence  go to state 92


state 80

   50 unsignedNumber: NON_ZERO_DIGIT digitSequence .

    $default  reduce using rule 50 (unsignedNumber)


state 81

   15 arrayType: simpleType OPEN_SQUARE_BRACKET unsignedNumber CLOSED_SQUARE_BRACKET .

    $default  reduce using rule 15 (arrayType)


state 82

   31 factor: OPEN_ROUND_BRACKET expression CLOSED_ROUND_BRACKET .

    $default  reduce using rule 31 (factor)


state 83

   34 factor: IDENTIFIER OPEN_SQUARE_BRACKET unsignedNumber . CLOSED_SQUARE_BRACKET

    CLOSED_SQUARE_BRACKET  shift, and go to state 93


state 84

   26 expression: expression PLUS term .
   29 term: term . MULTIPLY factor
   30     | term . DIVIDE factor

    DIVIDE    shift, and go to state 73
    MULTIPLY  shift, and go to state 74

    $default  reduce using rule 26 (expression)


state 85

   27 expression: expression MINUS term .
   29 term: term . MULTIPLY factor
   30     | term . DIVIDE factor

    DIVIDE    shift, and go to state 73
    MULTIPLY  shift, and go to state 74

    $default  reduce using rule 27 (expression)


state 86

   26 expression: expression . PLUS term
   27           | expression . MINUS term
   41 condition: expression relation expression .

    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65

    $default  reduce using rule 41 (condition)


state 87

   30 term: term DIVIDE factor .

    $default  reduce using rule 30 (term)


state 88

   29 term: term MULTIPLY factor .

    $default  reduce using rule 29 (term)


state 89

   40 ifBranch: IF OPEN_ROUND_BRACKET condition CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET . statementList CLOSED_CURLY_BRACKET

    DEFINE      shift, and go to state 3
    READ        shift, and go to state 4
    DISPLAY     shift, and go to state 5
    IF          shift, and go to state 6
    LOOP        shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    statementList    go to state 94
    statement        go to state 10
    simpleStatement  go to state 11
    defineStatement  go to state 12
    ioStatement      go to state 13
    readStatement    go to state 14
    writeStatement   go to state 15
    assignStatement  go to state 16
    structStatement  go to state 17
    ifStatement      go to state 18
    ifBranch         go to state 19
    loopStatement    go to state 20


state 90

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER . COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    COMMA  shift, and go to state 95


state 91

   38 ifStatement: ifBranch ELSE OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET .

    $default  reduce using rule 38 (ifStatement)


state 92

   52 digitSequence: DIGIT digitSequence .

    $default  reduce using rule 52 (digitSequence)


state 93

   34 factor: IDENTIFIER OPEN_SQUARE_BRACKET unsignedNumber CLOSED_SQUARE_BRACKET .

    $default  reduce using rule 34 (factor)


state 94

   40 ifBranch: IF OPEN_ROUND_BRACKET condition CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList . CLOSED_CURLY_BRACKET

    CLOSED_CURLY_BRACKET  shift, and go to state 96


state 95

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA . FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    FROM  shift, and go to state 97


state 96

   40 ifBranch: IF OPEN_ROUND_BRACKET condition CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET .

    $default  reduce using rule 40 (ifBranch)


state 97

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM . ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    ASSIGN  shift, and go to state 98


state 98

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN . expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    expression  go to state 99
    term        go to state 50
    factor      go to state 51


state 99

   26 expression: expression . PLUS term
   27           | expression . MINUS term
   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression . COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    COMMA  shift, and go to state 100
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65


state 100

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA . STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    STEP  shift, and go to state 101


state 101

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP . ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    ASSIGN  shift, and go to state 102


state 102

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN . expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    expression  go to state 103
    term        go to state 50
    factor      go to state 51


state 103

   26 expression: expression . PLUS term
   27           | expression . MINUS term
   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression . COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    COMMA  shift, and go to state 104
    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65


state 104

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA . UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    UNTIL  shift, and go to state 105


state 105

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL . ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    ASSIGN  shift, and go to state 106


state 106

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN . expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    OPEN_ROUND_BRACKET  shift, and go to state 46
    IDENTIFIER          shift, and go to state 47
    INTEGER_CONST       shift, and go to state 48

    expression  go to state 107
    term        go to state 50
    factor      go to state 51


state 107

   26 expression: expression . PLUS term
   27           | expression . MINUS term
   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression . CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    CLOSED_ROUND_BRACKET  shift, and go to state 108
    PLUS                  shift, and go to state 64
    MINUS                 shift, and go to state 65


state 108

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET . OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 109


state 109

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET . statementList CLOSED_CURLY_BRACKET

    DEFINE      shift, and go to state 3
    READ        shift, and go to state 4
    DISPLAY     shift, and go to state 5
    IF          shift, and go to state 6
    LOOP        shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    statementList    go to state 110
    statement        go to state 10
    simpleStatement  go to state 11
    defineStatement  go to state 12
    ioStatement      go to state 13
    readStatement    go to state 14
    writeStatement   go to state 15
    assignStatement  go to state 16
    structStatement  go to state 17
    ifStatement      go to state 18
    ifBranch         go to state 19
    loopStatement    go to state 20


state 110

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList . CLOSED_CURLY_BRACKET

    CLOSED_CURLY_BRACKET  shift, and go to state 111


state 111

   48 loopStatement: LOOP OPEN_ROUND_BRACKET ITERATOR ASSIGN IDENTIFIER COMMA FROM ASSIGN expression COMMA STEP ASSIGN expression COMMA UNTIL ASSIGN expression CLOSED_ROUND_BRACKET OPEN_CURLY_BRACKET statementList CLOSED_CURLY_BRACKET .

    $default  reduce using rule 48 (loopStatement)
